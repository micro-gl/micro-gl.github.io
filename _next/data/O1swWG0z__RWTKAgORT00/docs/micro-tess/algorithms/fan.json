{"pageProps":{"data":{"slug":"algorithms/fan","content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Introduction\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Fan Triangulation\"), \" for Convex polygons.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"O(n) computation, and O(n) memory.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Very simple algorithm.\")), mdx(\"h2\", null, \"Example\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"taken from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"examples/example_geometry_fan_triangulation.cpp\"))), mdx(\"img\", {\n    src: \"/images/tess/fan.png\",\n    style: {\n      height: \"250px\",\n      margin: \"auto\"\n    }\n  }), mdx(\"p\", null, \"The example demonstrates usage of different linear containers (including the packaged non standard \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dynamic_array\"), \").\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"The example also demonstrates different number types such as fixed point integer(\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Q\"), \" numbers), float and doubles.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Tessellation computation is only \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"16\"), \" lines of code.  \"), mdx(\"p\", null, \"I use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"microgl\"), \" project to render the tessellation.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"The algorithm output:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Will fill The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"output_type\"), \" for you to know how to iterate the triangles (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"TRIANGLES/FAN/STRIP\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Will fill the user supplied \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"output_indices\"), \" container with triangulation indices.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Will (optionally) fill the user supplied \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"output_boundary_info\"), \" container for you to know how to identify the boundary.\")), mdx(\"p\", null, \"Tessellation is happening at lines \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#38\"), \"-\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#55\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c++-lines_numbers\"\n  }, \"#define MICROGL_USE_EXTERNAL_MICRO_TESS\\n#include \\\"src/example.h\\\"\\n#include <microgl/canvas.h>\\n#include <microgl/bitmaps/bitmap.h>\\n#include <microgl/samplers/flat_color.h>\\n#include <microgl/pixel_coders/RGB888_PACKED_32.h>\\n\\n#include <micro-tess/fan_triangulation.h>\\n#include <micro-tess/static_array.h>\\n#include <micro-tess/dynamic_array.h>\\n#include <vector>\\n\\ntemplate<typename item_type>\\nusing container = dynamic_array<item_type>;\\n//using container = static_array<item_type, 100>;\\n//using container = std::vector<item_type>;\\n\\ntemplate <typename number>\\ncontainer<vertex2<number>> poly_diamond() {\\n    using il = std::initializer_list<vertex2<number>>;\\n    return il{{100,300}, {300, 100}, {400, 300}, {300, 400}};\\n}\\n\\nint main() {\\n    using number = float;\\n    // using number = Q<12>;\\n\\n    // microgl drawing setup START\\n    using Canvas24 = canvas<bitmap<coder::RGB888_PACKED_32>>;\\n    Canvas24 canvas(640, 480);\\n    sampling::flat_color<> color_red{{255, 0, 0, 255}};\\n    // microgl drawing setup END\\n\\n    auto render_polygon = [&](const container<vertex2<number>> &polygon) {\\n\\n        // algorithm START\\n        // output indices container\\n        container<unsigned int> output_indices;\\n        // output boundary info container\\n        container<boundary_info> output_boundary_buffer;\\n        // output triangles indices type\\n        microtess::triangles::indices output_triangles_type;\\n        // define algorithm\\n        using fan = microtess::fan_triangulation<\\n                    number, container<unsigned int>, \\n                    container<boundary_info>>;\\n        // compute algorithm\\n        fan::compute(\\n                polygon.data(),\\n                polygon.size(),\\n                output_indices,\\n                &output_boundary_buffer,\\n                output_triangles_type\\n        );\\n        // algorithm END\\n\\n        // draw triangles batch\\n        canvas.clear({255, 255, 255, 255});\\n        canvas.drawTriangles<blendmode::Normal, porterduff::FastSourceOverOnOpaque, true>(\\n                color_red,\\n                matrix_3x3<number>::identity(),\\n                polygon.data(),\\n                (vertex2<number> *) nullptr,\\n                output_indices.data(),\\n                output_boundary_buffer.data(),\\n                output_indices.size(),\\n                output_triangles_type,\\n                120);\\n\\n        // draw triangulation\\n        canvas.drawTrianglesWireframe(\\n                {0, 0, 0, 255},\\n                matrix_3x3<number>::identity(),\\n                polygon.data(),\\n                output_indices.data(),\\n                output_indices.size(),\\n                output_triangles_type,\\n                255);\\n    };\\n\\n    auto render = [&](void*, void*, void*) -> void {\\n        render_polygon(poly_diamond<number>());\\n    };\\n\\n    example_run(&canvas, render);\\n}\\n\")));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<h1 class=\"css-0\">Introduction</h1><p class=\"css-0\"><style data-emotion=\"css 10ircq3\">.css-10ircq3{font-weight:semibold;}</style><strong class=\"css-10ircq3\">Fan Triangulation</strong> for Convex polygons.</p><ol class=\"css-0\"><style data-emotion=\"css b0qdn7\">.css-b0qdn7{padding-bottom:4px;}</style><li class=\"css-b0qdn7\">O(n) computation, and O(n) memory.</li><li class=\"css-b0qdn7\">Very simple algorithm.</li></ol><h2 class=\"css-0\">Example</h2><style data-emotion=\"css 1rh9a91\">.css-1rh9a91{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:gray.800;background-color:gray.200;padding:2;padding-left:2px;border-radius:md;border-left-width:10px;border-left-color:pink.400;}</style><blockquote class=\"css-1rh9a91\"><p class=\"css-0\">taken from <style data-emotion=\"css gy3xy5\">.css-gy3xy5{color:pink.600;display:inline;}</style><div class=\"css-gy3xy5\">examples/example_geometry_fan_triangulation.cpp</div></p></blockquote><img src=\"/images/tess/fan.png\" style=\"height:250px;margin:auto\"/><p class=\"css-0\">The example demonstrates usage of different linear containers (including the packaged non standard <style data-emotion=\"css gy3xy5\">.css-gy3xy5{color:pink.600;display:inline;}</style><div class=\"css-gy3xy5\">dynamic_array</div>).<div class=\"css-0\"></div>\n<!-- -->The example also demonstrates different number types such as fixed point integer(<div class=\"css-gy3xy5\">Q</div> numbers), float and doubles.<div class=\"css-0\"></div>\n<!-- -->Tessellation computation is only <style data-emotion=\"css 10ircq3\">.css-10ircq3{font-weight:semibold;}</style><strong class=\"css-10ircq3\">16</strong> lines of code.  </p><p class=\"css-0\">I use the <style data-emotion=\"css gy3xy5\">.css-gy3xy5{color:pink.600;display:inline;}</style><div class=\"css-gy3xy5\">microgl</div> project to render the tessellation.<div class=\"css-0\"></div>\n<!-- -->The algorithm output:</p><ul class=\"css-0\"><style data-emotion=\"css b0qdn7\">.css-b0qdn7{padding-bottom:4px;}</style><li class=\"css-b0qdn7\">Will fill The <style data-emotion=\"css gy3xy5\">.css-gy3xy5{color:pink.600;display:inline;}</style><div class=\"css-gy3xy5\">output_type</div> for you to know how to iterate the triangles (<em>TRIANGLES/FAN/STRIP</em>)</li><li class=\"css-b0qdn7\">Will fill the user supplied <div class=\"css-gy3xy5\">output_indices</div> container with triangulation indices.</li><li class=\"css-b0qdn7\">Will (optionally) fill the user supplied <div class=\"css-gy3xy5\">output_boundary_info</div> container for you to know how to identify the boundary.</li></ul><p class=\"css-0\">Tessellation is happening at lines <style data-emotion=\"css gy3xy5\">.css-gy3xy5{color:pink.600;display:inline;}</style><div class=\"css-gy3xy5\">#38</div>-<div class=\"css-gy3xy5\">#55</div></p><pre><pre style=\"display:block;overflow-x:auto;background:#1C1D21;color:#c0c5ce;padding:0.5em;border-radius:10px;padding-left:20px;padding-top:20px\"><code class=\"language-c++\" style=\"white-space:pre\"><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">1</span><span style=\"color:#E7CE56\">#</span><span class=\"hljs-meta-keyword\" style=\"color:#E7CE56\">define</span><span style=\"color:#E7CE56\"> MICROGL_USE_EXTERNAL_MICRO_TESS</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">2</span><span></span><span style=\"color:#E7CE56\">#</span><span class=\"hljs-meta-keyword\" style=\"color:#E7CE56\">include</span><span style=\"color:#E7CE56\"> </span><span class=\"hljs-meta-string\" style=\"color:#E7CE56\">&quot;src/example.h&quot;</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">3</span><span></span><span style=\"color:#E7CE56\">#</span><span class=\"hljs-meta-keyword\" style=\"color:#E7CE56\">include</span><span style=\"color:#E7CE56\"> </span><span class=\"hljs-meta-string\" style=\"color:#E7CE56\">&lt;microgl/canvas.h&gt;</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">4</span><span></span><span style=\"color:#E7CE56\">#</span><span class=\"hljs-meta-keyword\" style=\"color:#E7CE56\">include</span><span style=\"color:#E7CE56\"> </span><span class=\"hljs-meta-string\" style=\"color:#E7CE56\">&lt;microgl/bitmaps/bitmap.h&gt;</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">5</span><span></span><span style=\"color:#E7CE56\">#</span><span class=\"hljs-meta-keyword\" style=\"color:#E7CE56\">include</span><span style=\"color:#E7CE56\"> </span><span class=\"hljs-meta-string\" style=\"color:#E7CE56\">&lt;microgl/samplers/flat_color.h&gt;</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">6</span><span></span><span style=\"color:#E7CE56\">#</span><span class=\"hljs-meta-keyword\" style=\"color:#E7CE56\">include</span><span style=\"color:#E7CE56\"> </span><span class=\"hljs-meta-string\" style=\"color:#E7CE56\">&lt;microgl/pixel_coders/RGB888_PACKED_32.h&gt;</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">7</span>\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">8</span><span></span><span style=\"color:#E7CE56\">#</span><span class=\"hljs-meta-keyword\" style=\"color:#E7CE56\">include</span><span style=\"color:#E7CE56\"> </span><span class=\"hljs-meta-string\" style=\"color:#E7CE56\">&lt;micro-tess/fan_triangulation.h&gt;</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">9</span><span></span><span style=\"color:#E7CE56\">#</span><span class=\"hljs-meta-keyword\" style=\"color:#E7CE56\">include</span><span style=\"color:#E7CE56\"> </span><span class=\"hljs-meta-string\" style=\"color:#E7CE56\">&lt;micro-tess/static_array.h&gt;</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">10</span><span></span><span style=\"color:#E7CE56\">#</span><span class=\"hljs-meta-keyword\" style=\"color:#E7CE56\">include</span><span style=\"color:#E7CE56\"> </span><span class=\"hljs-meta-string\" style=\"color:#E7CE56\">&lt;micro-tess/dynamic_array.h&gt;</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">11</span><span></span><span style=\"color:#E7CE56\">#</span><span class=\"hljs-meta-keyword\" style=\"color:#E7CE56\">include</span><span style=\"color:#E7CE56\"> </span><span class=\"hljs-meta-string\" style=\"color:#E7CE56\">&lt;vector&gt;</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">12</span>\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">13</span><span></span><span style=\"color:#B45EA4\">template</span><span>&lt;</span><span style=\"color:#B45EA4\">typename</span><span> item_type&gt;\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">14</span><span></span><span style=\"color:#B45EA4\">using</span><span> container = dynamic_array&lt;item_type&gt;;\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">15</span><span></span><span style=\"color:#B6B18B\">//using container = static_array&lt;item_type, 100&gt;;</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">16</span><span></span><span style=\"color:#B6B18B\">//using container = std::vector&lt;item_type&gt;;</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">17</span>\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">18</span><span></span><span style=\"color:#B45EA4\">template</span><span> &lt;</span><span style=\"color:#B45EA4\">typename</span><span> number&gt;\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">19</span>container&lt;vertex2&lt;number&gt;&gt; poly_diamond() {\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">20</span><span>    </span><span style=\"color:#B45EA4\">using</span><span> il = </span><span style=\"color:#E7CE56\">std</span><span>::</span><span style=\"color:#E7CE56\">initializer_list</span><span>&lt;vertex2&lt;number&gt;&gt;;\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">21</span><span>    </span><span style=\"color:#B45EA4\">return</span><span> il{{</span><span style=\"color:#E7CE56\">100</span><span>,</span><span style=\"color:#E7CE56\">300</span><span>}, {</span><span style=\"color:#E7CE56\">300</span><span>, </span><span style=\"color:#E7CE56\">100</span><span>}, {</span><span style=\"color:#E7CE56\">400</span><span>, </span><span style=\"color:#E7CE56\">300</span><span>}, {</span><span style=\"color:#E7CE56\">300</span><span>, </span><span style=\"color:#E7CE56\">400</span><span>}};\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">22</span>}\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">23</span>\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">24</span><span></span><span class=\"hljs-function\" style=\"color:#B45EA4\">int</span><span class=\"hljs-function\"> </span><span class=\"hljs-function\" style=\"color:#78BB65\">main</span><span class=\"hljs-function\" style=\"color:#E7CE56\">()</span><span class=\"hljs-function\"> </span><span>{\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">25</span><span>    </span><span style=\"color:#B45EA4\">using</span><span> number = </span><span style=\"color:#B45EA4\">float</span><span>;\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">26</span><span>    </span><span style=\"color:#B6B18B\">// using number = Q&lt;12&gt;;</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">27</span>\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">28</span><span>    </span><span style=\"color:#B6B18B\">// microgl drawing setup START</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">29</span><span>    </span><span style=\"color:#B45EA4\">using</span><span> Canvas24 = canvas&lt;bitmap&lt;coder::RGB888_PACKED_32&gt;&gt;;\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">30</span><span>    </span><span class=\"hljs-function\">Canvas24 </span><span class=\"hljs-function\" style=\"color:#78BB65\">canvas</span><span class=\"hljs-function\" style=\"color:#E7CE56\">(</span><span class=\"hljs-function\" style=\"color:#E7CE56\">640</span><span class=\"hljs-function\" style=\"color:#E7CE56\">, </span><span class=\"hljs-function\" style=\"color:#E7CE56\">480</span><span class=\"hljs-function\" style=\"color:#E7CE56\">)</span><span>;\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">31</span><span>    sampling::flat_color&lt;&gt; color_red{{</span><span style=\"color:#E7CE56\">255</span><span>, </span><span style=\"color:#E7CE56\">0</span><span>, </span><span style=\"color:#E7CE56\">0</span><span>, </span><span style=\"color:#E7CE56\">255</span><span>}};\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">32</span><span>    </span><span style=\"color:#B6B18B\">// microgl drawing setup END</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">33</span>\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">34</span><span>    </span><span style=\"color:#B45EA4\">auto</span><span> render_polygon = [&amp;](</span><span style=\"color:#B45EA4\">const</span><span> container&lt;vertex2&lt;number&gt;&gt; &amp;polygon) {\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">35</span>\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">36</span><span>        </span><span style=\"color:#B6B18B\">// algorithm START</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">37</span><span>        </span><span style=\"color:#B6B18B\">// output indices container</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">38</span><span>        container&lt;</span><span style=\"color:#B45EA4\">unsigned</span><span> </span><span style=\"color:#B45EA4\">int</span><span>&gt; output_indices;\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">39</span><span>        </span><span style=\"color:#B6B18B\">// output boundary info container</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">40</span>        container&lt;boundary_info&gt; output_boundary_buffer;\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">41</span><span>        </span><span style=\"color:#B6B18B\">// output triangles indices type</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">42</span>        microtess::triangles::indices output_triangles_type;\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">43</span><span>        </span><span style=\"color:#B6B18B\">// define algorithm</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">44</span><span>        </span><span style=\"color:#B45EA4\">using</span><span> fan = microtess::fan_triangulation&lt;\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">45</span><span>                    number, container&lt;</span><span style=\"color:#B45EA4\">unsigned</span><span> </span><span style=\"color:#B45EA4\">int</span><span>&gt;, \n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">46</span>                    container&lt;boundary_info&gt;&gt;;\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">47</span><span>        </span><span style=\"color:#B6B18B\">// compute algorithm</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">48</span>        fan::compute(\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">49</span>                polygon.data(),\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">50</span><span>                polygon.</span><span style=\"color:#E7CE56\">size</span><span>(),\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">51</span>                output_indices,\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">52</span>                &amp;output_boundary_buffer,\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">53</span>                output_triangles_type\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">54</span>        );\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">55</span><span>        </span><span style=\"color:#B6B18B\">// algorithm END</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">56</span>\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">57</span><span>        </span><span style=\"color:#B6B18B\">// draw triangles batch</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">58</span><span>        canvas.</span><span style=\"color:#E7CE56\">clear</span><span>({</span><span style=\"color:#E7CE56\">255</span><span>, </span><span style=\"color:#E7CE56\">255</span><span>, </span><span style=\"color:#E7CE56\">255</span><span>, </span><span style=\"color:#E7CE56\">255</span><span>});\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">59</span><span>        canvas.drawTriangles&lt;blendmode::Normal, porterduff::FastSourceOverOnOpaque, </span><span style=\"color:#E7CE56\">true</span><span>&gt;(\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">60</span>                color_red,\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">61</span>                matrix_3x3&lt;number&gt;::identity(),\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">62</span>                polygon.data(),\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">63</span><span>                (vertex2&lt;number&gt; *) </span><span style=\"color:#E7CE56\">nullptr</span><span>,\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">64</span>                output_indices.data(),\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">65</span>                output_boundary_buffer.data(),\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">66</span><span>                output_indices.</span><span style=\"color:#E7CE56\">size</span><span>(),\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">67</span>                output_triangles_type,\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">68</span><span>                </span><span style=\"color:#E7CE56\">120</span><span>);\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">69</span>\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">70</span><span>        </span><span style=\"color:#B6B18B\">// draw triangulation</span><span>\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">71</span>        canvas.drawTrianglesWireframe(\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">72</span><span>                {</span><span style=\"color:#E7CE56\">0</span><span>, </span><span style=\"color:#E7CE56\">0</span><span>, </span><span style=\"color:#E7CE56\">0</span><span>, </span><span style=\"color:#E7CE56\">255</span><span>},\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">73</span>                matrix_3x3&lt;number&gt;::identity(),\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">74</span>                polygon.data(),\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">75</span>                output_indices.data(),\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">76</span><span>                output_indices.</span><span style=\"color:#E7CE56\">size</span><span>(),\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">77</span>                output_triangles_type,\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">78</span><span>                </span><span style=\"color:#E7CE56\">255</span><span>);\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">79</span>    };\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">80</span>\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">81</span><span>    </span><span style=\"color:#B45EA4\">auto</span><span> render = [&amp;](</span><span style=\"color:#B45EA4\">void</span><span>*, </span><span style=\"color:#B45EA4\">void</span><span>*, </span><span style=\"color:#B45EA4\">void</span><span>*) -&gt; </span><span style=\"color:#B45EA4\">void</span><span> {\n</span><span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">82</span>        render_polygon(poly_diamond&lt;number&gt;());\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">83</span>    };\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">84</span>\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">85</span>    example_run(&amp;canvas, render);\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">86</span>}\n<span class=\"comment linenumber react-syntax-highlighter-line-number\" style=\"display:inline-block;min-width:3.25em;padding-right:1em;text-align:right;user-select:none\">87</span>\n</code></pre></pre>","scope":{}},"frontMatter":{},"document":{"name":"docs","groups":[{"title":"Getting Started","items":[{"title":"Setup","route":"getting-started/setup","path":"content/docs/micro-tess/setup.mdx"},{"title":"Features","route":"getting-started/features","path":"content/docs/micro-tess/features.mdx"}]},{"title":"Concepts","items":[{"title":"Numbers","route":"concepts/numbers","path":"content/docs/micro-tess/numbers.mdx"},{"title":"Triangles","route":"concepts/triangles","path":"content/docs/micro-tess/triangles.mdx"}]},{"title":"Algorithms","items":[{"title":"Path Fill","route":"algorithms/path-fill","path":"content/docs/micro-tess/path-fill.mdx"},{"title":"Path Stroke","route":"algorithms/path-stroke","path":"content/docs/micro-tess/path-stroke.mdx"},{"title":"Planar Subdivision","route":"algorithms/planar-subdivision","path":"content/docs/micro-tess/planar-subdivision.mdx"},{"title":"Stroke Tessellation","route":"algorithms/stroke","path":"content/docs/micro-tess/stroke.mdx"},{"title":"Ear Clipping Triangulation","route":"algorithms/ear-clipping","path":"content/docs/micro-tess/ear-clipping.mdx"},{"title":"Monotone Triangulation","route":"algorithms/monotone","path":"content/docs/micro-tess/monotone.mdx"},{"title":"Fan Triangulation","route":"algorithms/fan","path":"content/docs/micro-tess/fan.mdx"},{"title":"Bezier Curve Divider","route":"algorithms/bezier-curve-divider","path":"content/docs/micro-tess/bezier-curve-divider.mdx"},{"title":"Elliptic Arc Divider","route":"algorithms/elliptic-arc-divider","path":"content/docs/micro-tess/elliptic-arc-divider.mdx"},{"title":"Bezier Patch","route":"algorithms/bezier-patch","path":"content/docs/micro-tess/bezier-patch.mdx"}]}],"__map":{"getting-started/setup":"content/docs/micro-tess/setup.mdx","getting-started/features":"content/docs/micro-tess/features.mdx","concepts/numbers":"content/docs/micro-tess/numbers.mdx","concepts/triangles":"content/docs/micro-tess/triangles.mdx","algorithms/path-fill":"content/docs/micro-tess/path-fill.mdx","algorithms/path-stroke":"content/docs/micro-tess/path-stroke.mdx","algorithms/planar-subdivision":"content/docs/micro-tess/planar-subdivision.mdx","algorithms/stroke":"content/docs/micro-tess/stroke.mdx","algorithms/ear-clipping":"content/docs/micro-tess/ear-clipping.mdx","algorithms/monotone":"content/docs/micro-tess/monotone.mdx","algorithms/fan":"content/docs/micro-tess/fan.mdx","algorithms/bezier-curve-divider":"content/docs/micro-tess/bezier-curve-divider.mdx","algorithms/elliptic-arc-divider":"content/docs/micro-tess/elliptic-arc-divider.mdx","algorithms/bezier-patch":"content/docs/micro-tess/bezier-patch.mdx"}}}},"__N_SSG":true}