{"pageProps":{"data":{"slug":"concepts/samplers","content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Samplers are a first class citizen in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"microgl\"), \". think of them as an object,\\nthat can be sampled in the normalized unit square.\"), mdx(\"img\", {\n    src: \"/images/unit_square.png\",\n    style: {\n      marginTop: '2rem'\n    }\n  }), mdx(\"p\", null, \"Samplers can be anything, that can be sampled such as\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a fixed color\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a gradient\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a texture (image)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"effects\")), mdx(\"h3\", null, \"Sampler interface\"), mdx(\"p\", null, \"samplers are implemented as classes with a known interface. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"\")));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p class=\"css-0\">Samplers are a first class citizen in <style data-emotion=\"css 1pi5a8j\">.css-1pi5a8j{color:purple.500;display:inline;}</style><div class=\"css-1pi5a8j\">microgl</div>. think of them as an object,\nthat can be sampled in the normalized unit square.</p><img src=\"/images/unit_square.png\" style=\"margin-top:2rem\"/><p class=\"css-0\">Samplers can be anything, that can be sampled such as</p><ul class=\"css-0\"><style data-emotion=\"css b0qdn7\">.css-b0qdn7{padding-bottom:4px;}</style><li class=\"css-b0qdn7\">a fixed color</li><li class=\"css-b0qdn7\">a gradient</li><li class=\"css-b0qdn7\">a texture (image)</li><li class=\"css-b0qdn7\">effects</li></ul><h3 class=\"css-0\">Sampler interface</h3><p class=\"css-0\">samplers are implemented as classes with a known interface. </p><pre><pre style=\"display:block;overflow-x:auto;background:#1C1D21;color:#c0c5ce;padding:0.5em;border-radius:10px;padding-left:20px;padding-top:20px\"><code class=\"language-cpp\" style=\"white-space:pre\"></code></pre></pre>","scope":{}},"frontMatter":{},"document":{"name":"docs","groups":[{"title":"Getting Started","items":[{"title":"setup","route":"getting-started/setup","path":"content/docs/setup.mdx"},{"title":"Features","route":"getting-started/features","path":"content/docs/features.mdx"}]},{"title":"Concepts","items":[{"title":"Numbers","route":"concepts/numbers","path":"content/docs/numbers.mdx"},{"title":"Pixel coders","route":"concepts/pixel-coders","path":"content/docs/pixel-coders.mdx"},{"title":"Samplers","route":"concepts/samplers","path":"content/docs/samplers.mdx"},{"title":"Compostion","route":"B/hello-world","path":"content/docs/B/hello-world.mdx"},{"title":"Canvas","route":"B/hello-world","path":"content/docs/B/hello-world.mdx"}]}],"__map":{"getting-started/setup":"content/docs/setup.mdx","getting-started/features":"content/docs/features.mdx","concepts/numbers":"content/docs/numbers.mdx","concepts/pixel-coders":"content/docs/pixel-coders.mdx","concepts/samplers":"content/docs/samplers.mdx","B/hello-world":"content/docs/B/hello-world.mdx"}}}},"__N_SSG":true}