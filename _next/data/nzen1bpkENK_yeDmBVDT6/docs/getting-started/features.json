{"pageProps":{"data":{"slug":"getting-started/features","content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useTheme\"), \" is a custom hook used to get the theme object from context.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"examples:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1l\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1l\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1l\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1l\")), mdx(\"h2\", null, \"Import\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { useTheme } from \\\"@chakra-ui/react\\\"\\n\")), mdx(\"h2\", null, \"Return value\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useTheme\"), \" hook returns the theme object.\"), mdx(\"h2\", null, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }, \"function Example() {\\n  const theme = useTheme()\\n\\n  return <div>{/* Do something with the theme */}</div>\\n}\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"This is an example post. There's another one \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/posts/example-post\"\n  }, \"here\"), \".\")), mdx(\"p\", null, \"hello \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inline code a =0\"), \" hello\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"const styles = {\\n  global: (props) => ({\\n    fontFamily: \\\"body\\\",\\n    color: mode(\\\"gray.800\\\", \\\"whiteAlpha.900\\\")(props),\\n    bg: mode(\\\"white\\\", \\\"gray.800\\\")(props),\\n    lineHeight: \\\"base\\\",\\n    \\\"*::placeholder\\\": {\\n      color: mode(\\\"gray.400\\\", \\\"whiteAlpha.400\\\")(props),\\n    },\\n    \\\"*, *::before, &::after\\\": {\\n      borderColor: mode(\\\"gray.200\\\", \\\"whiteAlpha.300\\\")(props),\\n      wordWrap: \\\"break-word\\\",\\n    },\\n    fontFeatureSettings: `\\\"pnum\\\"`,\\n    fontVariantNumeric: \\\"proportional-nums\\\",\\n  }),\\n}\\n\")));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p class=\"css-0\"><style data-emotion=\"css 1pi5a8j\">.css-1pi5a8j{color:purple.500;display:inline;}</style><div class=\"css-1pi5a8j\">useTheme</div> is a custom hook used to get the theme object from context.<style data-emotion=\"css 15p9n5u\">.css-15p9n5u{height:24px;}</style><div class=\"css-15p9n5u\"></div>\n<!-- -->examples:</p><ul class=\"css-0\"><style data-emotion=\"css b0qdn7\">.css-b0qdn7{padding-bottom:4px;}</style><li class=\"css-b0qdn7\">1l</li><li class=\"css-b0qdn7\">1l</li><li class=\"css-b0qdn7\">1l</li><li class=\"css-b0qdn7\">1l</li></ul><h2 class=\"css-0\">Import</h2><pre><pre style=\"display:block;overflow-x:auto;background:#1C1D21;color:#c0c5ce;padding:0.5em;border-radius:10px;padding-left:20px;padding-top:20px\"><code class=\"language-js\" style=\"white-space:pre\"><span style=\"color:#B45EA4\">import</span><span> { useTheme } </span><span style=\"color:#B45EA4\">from</span><span> </span><span style=\"color:#4FB4D7\">&quot;@chakra-ui/react&quot;</span><span>\n</span>\n</code></pre></pre><h2 class=\"css-0\">Return value</h2><p class=\"css-0\">The <style data-emotion=\"css 1pi5a8j\">.css-1pi5a8j{color:purple.500;display:inline;}</style><div class=\"css-1pi5a8j\">useTheme</div> hook returns the theme object.</p><h2 class=\"css-0\">Usage</h2><pre><pre style=\"display:block;overflow-x:auto;background:#1C1D21;color:#c0c5ce;padding:0.5em;border-radius:10px;padding-left:20px;padding-top:20px\"><code class=\"language-jsx\" style=\"white-space:pre\"><span style=\"color:#B45EA4\">function</span><span> </span><span style=\"color:#78BB65\">Example</span><span>() {\n</span>  const theme = useTheme()\n<!-- -->\n<span>  </span><span style=\"color:#B45EA4\">return</span><span> </span><span style=\"color:#E7CE56\">&lt;div&gt;{/*</span><span> </span><span style=\"color:#B45EA4\">Do</span><span> something </span><span style=\"color:#B45EA4\">with</span><span> the theme */}&lt;/div&gt;\n</span>}\n<!-- -->\n</code></pre></pre><style data-emotion=\"css 1fb78zq\">.css-1fb78zq{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:gray.800;background-color:gray.200;padding:2;padding-left:0;border-radius:md;}</style><blockquote class=\"css-1fb78zq\"><style data-emotion=\"css iul3yz\">.css-iul3yz{width:6px;height:100%;display:inline-block;line-height:1em;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;color:purple.600;}</style><svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 16 16\" focusable=\"false\" class=\"chakra-icon css-iul3yz\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7.002 11a1 1 0 112 0 1 1 0 01-2 0zM7.1 4.995a.905.905 0 111.8 0l-.35 3.507a.552.552 0 01-1.1 0L7.1 4.995z\"></path></svg><p class=\"css-0\">This is an example post. There&#x27;s another one <style data-emotion=\"css 1kc89wa\">.css-1kc89wa{color:purple.500;}</style><a class=\"chakra-link css-1kc89wa\" href=\"/posts/example-post\">here</a>.</p></blockquote><p class=\"css-0\">hello <style data-emotion=\"css 1pi5a8j\">.css-1pi5a8j{color:purple.500;display:inline;}</style><div class=\"css-1pi5a8j\">inline code a =0</div> hello</p><pre><pre style=\"display:block;overflow-x:auto;background:#1C1D21;color:#c0c5ce;padding:0.5em;border-radius:10px;padding-left:20px;padding-top:20px\"><code class=\"language-cpp\" style=\"white-space:pre\"><span style=\"color:#B45EA4\">const</span><span> styles = {\n</span>  global: (props) =&gt; ({\n<span>    fontFamily: </span><span style=\"color:#4FB4D7\">&quot;body&quot;</span><span>,\n</span><span>    color: mode(</span><span style=\"color:#4FB4D7\">&quot;gray.800&quot;</span><span>, </span><span style=\"color:#4FB4D7\">&quot;whiteAlpha.900&quot;</span><span>)(props),\n</span><span>    bg: mode(</span><span style=\"color:#4FB4D7\">&quot;white&quot;</span><span>, </span><span style=\"color:#4FB4D7\">&quot;gray.800&quot;</span><span>)(props),\n</span><span>    lineHeight: </span><span style=\"color:#4FB4D7\">&quot;base&quot;</span><span>,\n</span><span>    </span><span style=\"color:#4FB4D7\">&quot;*::placeholder&quot;</span><span>: {\n</span><span>      color: mode(</span><span style=\"color:#4FB4D7\">&quot;gray.400&quot;</span><span>, </span><span style=\"color:#4FB4D7\">&quot;whiteAlpha.400&quot;</span><span>)(props),\n</span>    },\n<span>    </span><span style=\"color:#4FB4D7\">&quot;*, *::before, &amp;::after&quot;</span><span>: {\n</span><span>      borderColor: mode(</span><span style=\"color:#4FB4D7\">&quot;gray.200&quot;</span><span>, </span><span style=\"color:#4FB4D7\">&quot;whiteAlpha.300&quot;</span><span>)(props),\n</span><span>      wordWrap: </span><span style=\"color:#4FB4D7\">&quot;break-word&quot;</span><span>,\n</span>    },\n<span>    fontFeatureSettings: `</span><span style=\"color:#4FB4D7\">&quot;pnum&quot;</span><span>`,\n</span><span>    fontVariantNumeric: </span><span style=\"color:#4FB4D7\">&quot;proportional-nums&quot;</span><span>,\n</span>  }),\n<!-- -->}\n<!-- -->\n</code></pre></pre>","scope":{"title":"Hello World"}},"frontMatter":{"title":"Hello World"},"document":{"name":"docs","groups":[{"title":"Getting Started","items":[{"title":"setup","route":"getting-started/setup","path":"content/docs/A/hello-world.mdx"},{"title":"Features","route":"getting-started/features","path":"content/docs/A/hello-world.mdx"}]},{"title":"Concepts","items":[{"title":"Numbers","route":"B/hello-world","path":"content/docs/B/hello-world.mdx"},{"title":"Pixel coders","route":"B/hello-world","path":"content/docs/B/hello-world.mdx"},{"title":"Samplers","route":"B/hello-world","path":"content/docs/B/hello-world.mdx"},{"title":"Compostion","route":"B/hello-world","path":"content/docs/B/hello-world.mdx"},{"title":"Canvas","route":"B/hello-world","path":"content/docs/B/hello-world.mdx"}]}],"__map":{"getting-started/setup":"content/docs/A/hello-world.mdx","getting-started/features":"content/docs/A/hello-world.mdx","B/hello-world":"content/docs/B/hello-world.mdx"}}}},"__N_SSG":true}